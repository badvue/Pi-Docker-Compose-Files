services:
  foldingathome:
    image: lscr.io/linuxserver/foldingathome:latest
    container_name: foldingathome
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - ACCOUNT_TOKEN=XXXXXXX
      - MACHINE_NAME=XXXX
    volumes:
      - /Desktop/Folding@Home:/config
    ports:
      - 7396:7396
    restart: unless-stopped

  heimdall:
    image: lscr.io/linuxserver/heimdall:latest
    container_name: Heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /Desktop/Heimdall:/config
    ports:
      - 1443:443
    restart: unless-stopped

  calibre-web:
    image: lscr.io/linuxserver/calibre-web:latest
    container_name: Calibre-Web
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
    volumes:
      - /Desktop/Calibre:/config
      - /Desktop/Calibre/library:/books
    ports:
      - 8083:8083
    restart: unless-stopped

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: Wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - SERVERPORT=51820
      - PEERS=4
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.6.0.0
      - ALLOWEDIPS=0.0.0.0/0 #optional
      - LOG_CONFS=true
    volumes:
      - /Desktop/WireGuard/config:/config
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    image: "ghcr.io/home-assistant/home-assistant:stable"
    volumes:
      - /Desktop/HomeAssistantContainer:/config
      - /Desktop/HomeAssistantContainer/media:/media
      - /run/dbus:/run/dbus:ro
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    privileged: true
    network_mode: host

  wordpress:
    container_name: wordpress
    image: wordpress
    restart: unless-stopped
    depends_on:
      db:
        condition: service_started
    ports:
      - 8090:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: pi
      WORDPRESS_DB_PASSWORD: XXXXXXXX
      WORDPRESS_DB_NAME: wordpressdb1
    volumes:
      - /Desktop/WordPress/wordpress:/var/www/html

  db:
    container_name: mariadb
    image: yobasystems/alpine-mariadb:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpressdb1
      MYSQL_USER: pi
      MYSQL_PASSWORD: XXXXXXXX
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - /Desktop/WordPress/wordpress/mysql:/var/lib/mysql

  portainer-ce:
    container_name: portainer
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /Desktop/Portainer:/data

  wordpress2:
    container_name: Mia_Blog
    image: wordpress
    restart: unless-stopped
    depends_on:
      db2:
        condition: service_started
    ports:
      - 8091:80
    environment:
      WORDPRESS_DB_HOST: db2
      WORDPRESS_DB_USER: pi
      WORDPRESS_DB_PASSWORD: XXXXXXXX
      WORDPRESS_DB_NAME: wordpressdb2
    volumes:
      - /Desktop/WordPress/Mia_Blog:/var/www/html

  db2:
    container_name: Mia_DB
    image: yobasystems/alpine-mariadb:latest
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: wordpressdb2
      MYSQL_USER: pi
      MYSQL_PASSWORD: XXXXXXXX
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - /Desktop/WordPress/Mia_Blog/mysql:/var/lib/mysql

  nut-ups:
    image: upshift/nut-upsd:latest
    container_name: nut_upsd
    restart: always
    ports:
      - 3493:3493
    devices:
      - /dev/CyberPowerUPS:/dev/bus/usb
    environment:
      UPS_NAME: Living_Room
      API_USER: pi
      API_PASSWORD: XXXXXXXX
      ADMIN_PASSWORD: XXXXXXXX
    volumes:
      - /dev/bus/usb:/dev/bus/usb

  docker_mon:
    image: philhawthorne/ha-dockermon:edge
    container_name: ha_dockermon
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /Desktop/ha_dockermon:/config
    ports:
      - 8126:8126

  monitoring:
    image: nicolargo/glances:latest-full
    container_name: Glances
    restart: always
    pid: host
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /run/user/1000/podman/podman.sock:/run/user/1000/podman/podman.sock
    environment:
      - "GLANCES_OPT=-w"

  mongodb:
    image: mongo:4.0.28
    container_name: Unifi-Mongodb
    volumes:
      - /Desktop/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - /Desktop/Unifi-Network-Application/mongo:/data/db
    restart: unless-stopped

  unifi-network-application:
    depends_on:
      mongodb:
        condition: service_started
    image: lscr.io/linuxserver/unifi-network-application:latest
    container_name: Unifi-Network-Application
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Chicago
      - MONGO_USER=unifi
      - MONGO_PASS=2B2g1d2r
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DBNAME=unifi
      - MEM_LIMIT=512
      - MEM_STARTUP=512
    volumes:
      - /Desktop/Unifi-Network-Application/config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp
      - 8843:8843
      - 8880:8880
      - 6789:6789
      - 5514:5514/udp
    restart: unless-stopped

  iSponsorBlockTV:
    image: ghcr.io/dmunozv04/isponsorblocktv
    container_name: iSponsorBlockTV
    restart: unless-stopped
    volumes:
      - /Desktop/iSponsorBlockTV:/app/data

  redis:
    image: redis:latest
    container_name: redis-cache
    volumes:
      - /Desktop/Redis:/data
    ports:
      - 6379:6379
    restart: unless-stopped
